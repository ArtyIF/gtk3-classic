diff -U 10 -r -Z -B ./org/gtk/gtkfilesystem.c ./mod/gtk/gtkfilesystem.c
--- ./org/gtk/gtkfilesystem.c	2017-05-11 21:09:33.000000000 +0200
+++ ./mod/gtk/gtkfilesystem.c	2017-06-19 20:18:05.980166455 +0200
@@ -770,27 +770,27 @@
 
   g_object_unref (icon);
 
   return surface;
 }
 
 GIcon *
 _gtk_file_system_volume_get_symbolic_icon (GtkFileSystemVolume *volume)
 {
   if (IS_ROOT_VOLUME (volume))
-    return g_themed_icon_new ("drive-harddisk-symbolic");
+    return g_themed_icon_new ("drive-harddisk");
   else if (G_IS_DRIVE (volume))
-    return g_drive_get_symbolic_icon (G_DRIVE (volume));
+    return g_drive_get_icon (G_DRIVE (volume));
   else if (G_IS_VOLUME (volume))
-    return g_volume_get_symbolic_icon (G_VOLUME (volume));
+    return g_volume_get_icon (G_VOLUME (volume));
   else if (G_IS_MOUNT (volume))
-    return g_mount_get_symbolic_icon (G_MOUNT (volume));
+    return g_mount_get_icon (G_MOUNT (volume));
   else
     return NULL;
 }
 
 GtkFileSystemVolume *
 _gtk_file_system_volume_ref (GtkFileSystemVolume *volume)
 {
   if (IS_ROOT_VOLUME (volume))
     return volume;
 
diff -U 10 -r -Z -B ./org/gtk/gtkpathbar.c ./mod/gtk/gtkpathbar.c
--- ./org/gtk/gtkpathbar.c	2017-05-11 21:09:33.000000000 +0200
+++ ./mod/gtk/gtkpathbar.c	2017-06-19 20:13:53.890153964 +0200
@@ -1266,21 +1266,21 @@
 
   if (!data->button_data->button)
     {
       g_free (data->button_data);
       goto out;
     }
 
   if (cancelled || error)
     goto out;
 
-  icon = g_file_info_get_symbolic_icon (info);
+  icon = g_file_info_get_icon (info);
   gtk_image_set_from_gicon (GTK_IMAGE (data->button_data->image), icon, GTK_ICON_SIZE_BUTTON);
 
   switch (data->button_data->type)
     {
       case HOME_BUTTON:
         g_set_object (&data->path_bar->priv->home_icon, icon);
 	break;
 
       case DESKTOP_BUTTON:
         g_set_object (&data->path_bar->priv->desktop_icon, icon);
@@ -1332,21 +1332,21 @@
       data = g_new0 (struct SetButtonImageData, 1);
       data->path_bar = path_bar;
       data->button_data = button_data;
 
       if (button_data->cancellable)
 	g_cancellable_cancel (button_data->cancellable);
 
       button_data->cancellable =
         _gtk_file_system_get_info (path_bar->priv->file_system,
 				   path_bar->priv->home_file,
-				   "standard::symbolic-icon",
+				   "standard::icon",
 				   set_button_image_get_info_cb,
 				   data);
       break;
 
     case DESKTOP_BUTTON:
       if (path_bar->priv->desktop_icon != NULL)
         {
           gtk_image_set_from_gicon (GTK_IMAGE (button_data->image), path_bar->priv->desktop_icon, GTK_ICON_SIZE_BUTTON);
 	  break;
 	}
@@ -1354,21 +1354,21 @@
       data = g_new0 (struct SetButtonImageData, 1);
       data->path_bar = path_bar;
       data->button_data = button_data;
 
       if (button_data->cancellable)
 	g_cancellable_cancel (button_data->cancellable);
 
       button_data->cancellable =
         _gtk_file_system_get_info (path_bar->priv->file_system,
 				   path_bar->priv->desktop_file,
-				   "standard::symbolic-icon",
+				   "standard::icon",
 				   set_button_image_get_info_cb,
 				   data);
       break;
     default:
       break;
     }
 }
 
 static void
 button_data_free (ButtonData *button_data)
diff -U 10 -r -Z -B ./org/gtk/gtkplacessidebar.c ./mod/gtk/gtkplacessidebar.c
--- ./org/gtk/gtkplacessidebar.c	2017-05-11 21:09:33.000000000 +0200
+++ ./mod/gtk/gtkplacessidebar.c	2017-06-19 20:13:53.896820632 +0200
@@ -240,39 +240,39 @@
   PROP_SHOW_CONNECT_TO_SERVER,
   PROP_SHOW_ENTER_LOCATION,
   PROP_SHOW_TRASH,
   PROP_LOCAL_ONLY,
   PROP_SHOW_OTHER_LOCATIONS,
   PROP_POPULATE_ALL,
   NUM_PROPERTIES
 };
 
 /* Names for themed icons */
-#define ICON_NAME_HOME     "user-home-symbolic"
-#define ICON_NAME_DESKTOP  "user-desktop-symbolic"
-#define ICON_NAME_FILESYSTEM     "drive-harddisk-symbolic"
-#define ICON_NAME_EJECT    "media-eject-symbolic"
-#define ICON_NAME_NETWORK  "network-workgroup-symbolic"
-#define ICON_NAME_NETWORK_SERVER "network-server-symbolic"
-#define ICON_NAME_FOLDER_NETWORK "folder-remote-symbolic"
-#define ICON_NAME_OTHER_LOCATIONS "list-add-symbolic"
-
-#define ICON_NAME_FOLDER                "folder-symbolic"
-#define ICON_NAME_FOLDER_DESKTOP  "user-desktop-symbolic"
-#define ICON_NAME_FOLDER_DOCUMENTS      "folder-documents-symbolic"
-#define ICON_NAME_FOLDER_DOWNLOAD       "folder-download-symbolic"
-#define ICON_NAME_FOLDER_MUSIC    "folder-music-symbolic"
-#define ICON_NAME_FOLDER_PICTURES       "folder-pictures-symbolic"
-#define ICON_NAME_FOLDER_PUBLIC_SHARE   "folder-publicshare-symbolic"
-#define ICON_NAME_FOLDER_TEMPLATES      "folder-templates-symbolic"
-#define ICON_NAME_FOLDER_VIDEOS   "folder-videos-symbolic"
-#define ICON_NAME_FOLDER_SAVED_SEARCH   "folder-saved-search-symbolic"
+#define ICON_NAME_HOME     "user-home"
+#define ICON_NAME_DESKTOP  "user-desktop"
+#define ICON_NAME_FILESYSTEM     "drive-harddisk"
+#define ICON_NAME_EJECT    "media-eject"
+#define ICON_NAME_NETWORK  "network-workgroup"
+#define ICON_NAME_NETWORK_SERVER "network-server"
+#define ICON_NAME_FOLDER_NETWORK "folder-remote"
+#define ICON_NAME_OTHER_LOCATIONS "list-add"
+
+#define ICON_NAME_FOLDER                "folder"
+#define ICON_NAME_FOLDER_DESKTOP  "user-desktop"
+#define ICON_NAME_FOLDER_DOCUMENTS      "folder-documents"
+#define ICON_NAME_FOLDER_DOWNLOAD       "folder-download"
+#define ICON_NAME_FOLDER_MUSIC    "folder-music"
+#define ICON_NAME_FOLDER_PICTURES       "folder-pictures"
+#define ICON_NAME_FOLDER_PUBLIC_SHARE   "folder-publicshare"
+#define ICON_NAME_FOLDER_TEMPLATES      "folder-templates"
+#define ICON_NAME_FOLDER_VIDEOS   "folder-videos"
+#define ICON_NAME_FOLDER_SAVED_SEARCH   "folder-saved-search"
 
 static guint places_sidebar_signals [LAST_SIGNAL] = { 0 };
 static GParamSpec *properties[NUM_PROPERTIES] = { NULL, };
 
 static gboolean eject_or_unmount_bookmark  (GtkSidebarRow *row);
 static gboolean eject_or_unmount_selection (GtkPlacesSidebar *sidebar);
 static void  check_unmount_and_eject       (GMount   *mount,
                                             GVolume  *volume,
                                             GDrive   *drive,
                                             gboolean *show_unmount,
@@ -740,21 +740,21 @@
 
   if (info)
     {
       gchar *uri;
       gchar *tooltip;
       const gchar *name;
       GIcon *icon;
       int pos = 0;
 
       name = g_file_info_get_display_name (info);
-      icon = g_file_info_get_symbolic_icon (info);
+      icon = g_file_info_get_icon (info);
       uri = g_file_get_uri (file);
       tooltip = g_file_get_parse_name (file);
 
       /* XXX: we could avoid this by using an ancillary closure
        * with the index coming from add_application_shortcuts(),
        * but in terms of algorithmic overhead, the application
        * shortcuts is not going to be really big
        */
       pos = g_slist_index (sidebar->shortcuts, file);
 
@@ -781,21 +781,21 @@
     {
       GFile *file = l->data;
 
       if (!should_show_file (sidebar, file))
         continue;
 
       if (file_is_shown (sidebar, file))
         continue;
 
       g_file_query_info_async (file,
-                               "standard::display-name,standard::symbolic-icon",
+                               "standard::display-name,standard::icon",
                                G_FILE_QUERY_INFO_NONE,
                                G_PRIORITY_DEFAULT,
                                sidebar->cancellable,
                                on_app_shortcuts_query_complete,
                                sidebar);
     }
 }
 
 typedef struct {
   GtkPlacesSidebar *sidebar;
@@ -830,21 +830,21 @@
       /* Don't add non-UTF-8 bookmarks */
       bookmark_name = g_file_get_basename (root);
       if (!g_utf8_validate (bookmark_name, -1, NULL))
         {
           g_free (bookmark_name);
           goto out;
         }
     }
 
   if (info)
-    icon = g_object_ref (g_file_info_get_symbolic_icon (info));
+    icon = g_object_ref (g_file_info_get_icon (info));
   else
     icon = g_themed_icon_new_with_default_fallbacks (clos->is_native ? ICON_NAME_FOLDER : ICON_NAME_FOLDER_NETWORK);
 
   mount_uri = g_file_get_uri (root);
   tooltip = g_file_get_parse_name (root);
 
   add_place (sidebar, PLACES_BOOKMARK,
              SECTION_BOOKMARKS,
              bookmark_name, icon, mount_uri,
              NULL, NULL, NULL, clos->index,
@@ -937,21 +937,21 @@
   gtk_container_foreach (GTK_CONTAINER (sidebar->list_box),
                          (GtkCallback) gtk_widget_destroy,
                          NULL);
 
   network_mounts = network_volumes = NULL;
 
   /* add built-in places */
   if (should_show_recent (sidebar))
     {
       mount_uri = "recent:///";
-      icon = g_themed_icon_new_with_default_fallbacks ("document-open-recent-symbolic");
+      icon = g_themed_icon_new_with_default_fallbacks ("document-open-recent");
       add_place (sidebar, PLACES_BUILT_IN,
                  SECTION_COMPUTER,
                  _("Recent"), icon, mount_uri,
                  NULL, NULL, NULL, 0,
                  _("Recent files"));
       g_object_unref (icon);
     }
 
   /* home folder */
   home_uri = get_home_directory_uri ();
@@ -1039,21 +1039,21 @@
               if (sidebar->show_other_locations && !is_external_volume (volume))
                 {
                   g_object_unref (volume);
                   continue;
                 }
 
               mount = g_volume_get_mount (volume);
               if (mount != NULL)
                 {
                   /* Show mounted volume in the sidebar */
-                  icon = g_mount_get_symbolic_icon (mount);
+                  icon = g_mount_get_icon (mount);
                   root = g_mount_get_default_location (mount);
                   mount_uri = g_file_get_uri (root);
                   name = g_mount_get_name (mount);
                   tooltip = g_file_get_parse_name (root);
 
                   add_place (sidebar, PLACES_MOUNTED_VOLUME,
                              SECTION_MOUNTS,
                              name, icon, mount_uri,
                              drive, volume, mount, 0, tooltip);
                   g_object_unref (root);
@@ -1066,21 +1066,21 @@
               else
                 {
                   /* Do show the unmounted volumes in the sidebar;
                    * this is so the user can mount it (in case automounting
                    * is off).
                    *
                    * Also, even if automounting is enabled, this gives a visual
                    * cue that the user should remember to yank out the media if
                    * he just unmounted it.
                    */
-                  icon = g_volume_get_symbolic_icon (volume);
+                  icon = g_volume_get_icon (volume);
                   name = g_volume_get_name (volume);
                   tooltip = g_strdup_printf (_("Mount and open “%s”"), name);
 
                   add_place (sidebar, PLACES_MOUNTED_VOLUME,
                              SECTION_MOUNTS,
                              name, icon, NULL,
                              drive, volume, NULL, 0, tooltip);
                   g_object_unref (icon);
                   g_free (name);
                   g_free (tooltip);
@@ -1094,21 +1094,21 @@
           if (g_drive_is_media_removable (drive) && !g_drive_is_media_check_automatic (drive))
             {
               /* If the drive has no mountable volumes and we cannot detect media change.. we
                * display the drive in the sidebar so the user can manually poll the drive by
                * right clicking and selecting "Rescan..."
                *
                * This is mainly for drives like floppies where media detection doesn't
                * work.. but it's also for human beings who like to turn off media detection
                * in the OS to save battery juice.
                */
-              icon = g_drive_get_symbolic_icon (drive);
+              icon = g_drive_get_icon (drive);
               name = g_drive_get_name (drive);
               tooltip = g_strdup_printf (_("Mount and open “%s”"), name);
 
               add_place (sidebar, PLACES_BUILT_IN,
                          SECTION_MOUNTS,
                          name, icon, NULL,
                          drive, NULL, NULL, 0, tooltip);
               g_object_unref (icon);
               g_free (tooltip);
               g_free (name);
@@ -1142,40 +1142,40 @@
 
       if (sidebar->show_other_locations && !is_external_volume (volume))
         {
           g_object_unref (volume);
           continue;
         }
 
       mount = g_volume_get_mount (volume);
       if (mount != NULL)
         {
-          icon = g_mount_get_symbolic_icon (mount);
+          icon = g_mount_get_icon (mount);
           root = g_mount_get_default_location (mount);
           mount_uri = g_file_get_uri (root);
           tooltip = g_file_get_parse_name (root);
           name = g_mount_get_name (mount);
           add_place (sidebar, PLACES_MOUNTED_VOLUME,
                      SECTION_MOUNTS,
                      name, icon, mount_uri,
                      NULL, volume, mount, 0, tooltip);
           g_object_unref (mount);
           g_object_unref (root);
           g_object_unref (icon);
           g_free (name);
           g_free (tooltip);
           g_free (mount_uri);
         }
       else
         {
           /* see comment above in why we add an icon for an unmounted mountable volume */
-          icon = g_volume_get_symbolic_icon (volume);
+          icon = g_volume_get_icon (volume);
           name = g_volume_get_name (volume);
           add_place (sidebar, PLACES_MOUNTED_VOLUME,
                      SECTION_MOUNTS,
                      name, icon, NULL,
                      NULL, volume, NULL, 0, name);
           g_object_unref (icon);
           g_free (name);
         }
       g_object_unref (volume);
     }
@@ -1214,21 +1214,21 @@
         }
       root = g_mount_get_default_location (mount);
 
       if (!g_file_is_native (root))
         {
           network_mounts = g_list_prepend (network_mounts, mount);
           g_object_unref (root);
           continue;
         }
 
-      icon = g_mount_get_symbolic_icon (mount);
+      icon = g_mount_get_icon (mount);
       mount_uri = g_file_get_uri (root);
       name = g_mount_get_name (mount);
       tooltip = g_file_get_parse_name (root);
       add_place (sidebar, PLACES_MOUNTED_VOLUME,
                  SECTION_COMPUTER,
                  name, icon, mount_uri,
                  NULL, NULL, mount, 0, tooltip);
       g_object_unref (root);
       g_object_unref (mount);
       g_object_unref (icon);
@@ -1253,32 +1253,32 @@
         continue;
 
       if (sidebar->local_only && !is_native)
         continue;
 
       clos = g_slice_new (BookmarkQueryClosure);
       clos->sidebar = sidebar;
       clos->index = index;
       clos->is_native = is_native;
       g_file_query_info_async (root,
-                               "standard::display-name,standard::symbolic-icon",
+                               "standard::display-name,standard::icon",
                                G_FILE_QUERY_INFO_NONE,
                                G_PRIORITY_DEFAULT,
                                sidebar->cancellable,
                                on_bookmark_query_info_complete,
                                clos);
     }
 
   g_slist_free_full (bookmarks, g_object_unref);
 
   /* Add new bookmark row */
-  new_bookmark_icon = g_themed_icon_new ("bookmark-new-symbolic");
+  new_bookmark_icon = g_themed_icon_new ("bookmark-new");
   sidebar->new_bookmark_row = add_place (sidebar, PLACES_DROP_FEEDBACK,
                                          SECTION_BOOKMARKS,
                                          _("New bookmark"), new_bookmark_icon, NULL,
                                          NULL, NULL, NULL, 0,
                                          _("Add a new bookmark"));
   context = gtk_widget_get_style_context (sidebar->new_bookmark_row);
   gtk_style_context_add_class (context, "sidebar-new-bookmark-row");
   g_object_unref (new_bookmark_icon);
 
   /* network */
@@ -1301,40 +1301,40 @@
           volume = l->data;
           mount = g_volume_get_mount (volume);
 
           if (mount != NULL)
             {
               network_mounts = g_list_prepend (network_mounts, mount);
               continue;
             }
           else
             {
-              icon = g_volume_get_symbolic_icon (volume);
+              icon = g_volume_get_icon (volume);
               name = g_volume_get_name (volume);
               tooltip = g_strdup_printf (_("Mount and open “%s”"), name);
 
               add_place (sidebar, PLACES_MOUNTED_VOLUME,
                          SECTION_MOUNTS,
                          name, icon, NULL,
                          NULL, volume, NULL, 0, tooltip);
               g_object_unref (icon);
               g_free (name);
               g_free (tooltip);
             }
         }
 
       network_mounts = g_list_reverse (network_mounts);
       for (l = network_mounts; l != NULL; l = l->next)
         {
           mount = l->data;
           root = g_mount_get_default_location (mount);
-          icon = g_mount_get_symbolic_icon (mount);
+          icon = g_mount_get_icon (mount);
           mount_uri = g_file_get_uri (root);
           name = g_mount_get_name (mount);
           tooltip = g_file_get_parse_name (root);
           add_place (sidebar, PLACES_MOUNTED_VOLUME,
                      SECTION_MOUNTS,
                      name, icon, mount_uri,
                      NULL, NULL, mount, 0, tooltip);
           g_object_unref (root);
           g_object_unref (icon);
           g_free (name);
diff -U 10 -r -Z -B ./org/gtk/gtktrashmonitor.c ./mod/gtk/gtktrashmonitor.c
--- ./org/gtk/gtktrashmonitor.c	2017-05-11 21:09:33.000000000 +0200
+++ ./mod/gtk/gtktrashmonitor.c	2017-06-19 20:13:53.896820632 +0200
@@ -45,22 +45,22 @@
   TRASH_STATE_CHANGED,
   LAST_SIGNAL
 };
 
 static guint signals[LAST_SIGNAL];
 
 G_DEFINE_TYPE (GtkTrashMonitor, _gtk_trash_monitor, G_TYPE_OBJECT)
 
 static GtkTrashMonitor *the_trash_monitor;
 
-#define ICON_NAME_TRASH_EMPTY "user-trash-symbolic"
-#define ICON_NAME_TRASH_FULL  "user-trash-full-symbolic"
+#define ICON_NAME_TRASH_EMPTY "user-trash"
+#define ICON_NAME_TRASH_FULL  "user-trash-full"
 
 static void
 gtk_trash_monitor_dispose (GObject *object)
 {
   GtkTrashMonitor *monitor;
 
   monitor = GTK_TRASH_MONITOR (object);
 
   if (monitor->file_monitor)
     {
diff -U 10 -r -Z -B ./org/gtk/ui/gtkfilechooserwidget.ui ./mod/gtk/ui/gtkfilechooserwidget.ui
--- ./org/gtk/ui/gtkfilechooserwidget.ui	2017-05-11 21:09:33.000000000 +0200
+++ ./mod/gtk/ui/gtkfilechooserwidget.ui	2017-06-19 20:13:53.896820632 +0200
@@ -66,21 +66,21 @@
                                 </child>
                                 <child>
                                   <object class="GtkMenuButton" id="browse_new_folder_button">
                                     <property name="tooltip-text" translatable="yes">Create Folder</property>
                                     <property name="use-underline">1</property>
                                     <property name="popover">new_folder_popover</property>
                                     <signal name="notify::active" handler="new_folder_popover_active"/>
                                     <child>
                                       <object class="GtkImage">
                                         <property name="visible">1</property>
-                                        <property name="icon-name">folder-new-symbolic</property>
+                                        <property name="icon-name">folder-new</property>
                                         <property name="icon-size">1</property>
                                       </object>
                                     </child>
                                   </object>
                                   <packing>
                                     <property name="fill">0</property>
                                     <property name="pack-type">end</property>
                                     <property name="position">1</property>
                                   </packing>
                                 </child>
@@ -286,21 +286,21 @@
                             <property name="hexpand">1</property>
                             <property name="vexpand">1</property>
                             <property name="halign">center</property>
                             <property name="valign">center</property>
                             <style>
                               <class name="dim-label"/>
                             </style>
                             <child>
                               <object class="GtkImage">
                                 <property name="visible">1</property>
-                                <property name="icon-name">edit-find-symbolic</property>
+                                <property name="icon-name">edit-find</property>
                                 <property name="pixel-size">72</property>
                                 <style>
                                   <class name="dim-label"/>
                                 </style>
                               </object>
                               <packing>
                                 <property name="left-attach">0</property>
                                 <property name="top-attach">0</property>
                               </packing>
                             </child>
diff -U 10 -r -Z -B ./org/gtk/ui/gtksidebarrow.ui ./mod/gtk/ui/gtksidebarrow.ui
--- ./org/gtk/ui/gtksidebarrow.ui	2017-05-11 21:09:33.000000000 +0200
+++ ./mod/gtk/ui/gtksidebarrow.ui	2017-06-19 20:13:53.896820632 +0200
@@ -17,22 +17,22 @@
         </style>
         <child>
           <object class="GtkEventBox" id="event_box">
             <property name="visible">1</property>
             <child>
               <object class="GtkBox">
                 <property name="visible">1</property>
                 <child>
                   <object class="GtkImage" id="icon_widget">
                     <property name="visible">1</property>
+                    <property name="margin-right">8</property>
                     <style>
-                      <class name="sidebar-icon"/>
                     </style>
                   </object>
                 </child>
                 <child>
                   <object class="GtkLabel" id="label_widget">
                     <property name="visible">1</property>
                     <property name="hexpand">1</property>
                     <property name="xalign">0</property>
                     <style>
                       <class name="sidebar-label"/>
