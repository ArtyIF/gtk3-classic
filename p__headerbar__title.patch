diff -U 10 -r -Z -B ./org/gtk/gtkheaderbar.c ./mod/gtk/gtkheaderbar.c
--- ./org/gtk/gtkheaderbar.c	2017-06-20 21:16:19.000000000 +0200
+++ ./mod/gtk/gtkheaderbar.c	2017-07-03 16:13:24.030051503 +0200
@@ -560,20 +560,21 @@
                                previous_widget ? gtk_widget_get_css_node (previous_widget) : NULL);
   else
     gtk_css_node_insert_before (gtk_widget_get_css_node (GTK_WIDGET (bar)),
                                 gtk_widget_get_css_node (widget),
                                 previous_widget ? gtk_widget_get_css_node (previous_widget) : NULL);
 }
 
 static void
 construct_label_box (GtkHeaderBar *bar)
 {
+  return;
   GtkHeaderBarPrivate *priv = gtk_header_bar_get_instance_private (bar);
 
   g_assert (priv->label_box == NULL);
 
   priv->label_box = create_title_box (priv->title,
                                       priv->subtitle,
                                       &priv->title_label,
                                       &priv->subtitle_label);
   gtk_header_bar_reorder_css_node (bar, GTK_PACK_START, priv->label_box);
   gtk_widget_set_parent (priv->label_box, GTK_WIDGET (bar));
diff -U 10 -r -Z -B ./org/gtk/gtkwindow.c ./mod/gtk/gtkwindow.c
--- ./org/gtk/gtkwindow.c	2017-06-20 21:16:19.000000000 +0200
+++ ./mod/gtk/gtkwindow.c	2017-07-03 16:13:06.296717294 +0200
@@ -2333,20 +2333,22 @@
 
   priv = window->priv;
   widget = GTK_WIDGET (window);
 
   new_title = g_strdup (title);
   g_free (priv->title);
   priv->title = new_title;
 
   if (new_title == NULL)
     new_title = "";
+  if (GTK_IS_HEADER_BAR (priv->title_box) && gtk_header_bar_get_subtitle(GTK_HEADER_BAR (priv->title_box)))
+    new_title = g_strconcat(new_title, " â€” ", gtk_header_bar_get_subtitle(GTK_HEADER_BAR (priv->title_box)), NULL);
 
   if (_gtk_widget_get_realized (widget))
     gdk_window_set_title (_gtk_widget_get_window (widget), new_title);
 
   if (update_titlebar && GTK_IS_HEADER_BAR (priv->title_box))
     gtk_header_bar_set_title (GTK_HEADER_BAR (priv->title_box), new_title);
 
   g_object_notify_by_pspec (G_OBJECT (window), window_props[PROP_TITLE]);
 }
 
